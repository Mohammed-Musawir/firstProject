<%- include('../Partials/admin/adminHeader') %>

<div class="container-fluid py-4">
  <div class="row">
    <div class="col-12">
      <div class="card bg-white shadow-sm border-0 mb-4">
        <div class="card-header bg-gradient-brown d-flex justify-content-between align-items-center">
          <h4 class="text-white mb-0">Product Management</h4>
          <button type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="fas fa-plus me-2"></i>Add Product
          </button>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-hover align-middle">
              <thead class="bg-light">
                <tr>
                  <th class="text-brown">ID</th>
                  <th class="text-brown">Images</th>
                  <th class="text-brown">Name</th>
                  <th class="text-brown">Category</th>
                  <th class="text-brown">Price</th>
                  <th class="text-brown text-end">Action</th>
                </tr>
              </thead>
              <tbody>
                <% if (products && products.length > 0) { %>
                  <% products.forEach(product => { %>
                    <tr>
                      <td><%= product.id %></td>
                      <td>
                        <div class="product-images-preview">
                          <% if (product.images && product.images.length > 0) { %>
                            <img src="<%= product.images[0] %>" alt="<%= product.name %>" class="img-thumbnail rounded" width="60">
                            <% if (product.images.length > 1) { %>
                              <span class="badge bg-brown">+<%= product.images.length - 1 %></span>
                            <% } %>
                          <% } else { %>
                            <div class="no-image-placeholder bg-light rounded d-flex align-items-center justify-content-center" style="width: 60px; height: 60px;">
                              <i class="fas fa-image text-muted"></i>
                            </div>
                          <% } %>
                        </div>
                      </td>
                      <td><%= product.name %></td>
                      <td><span class="badge bg-light-brown text-brown"><%= product.category %></span></td>
                      <td>$<%= product.price.toFixed(2) %></td>
                      <td class="text-end">
                        <button type="button" class="btn btn-sm btn-outline-brown me-2" 
                                onclick="editProduct('<%= product.id %>')">
                          <i class="fas fa-edit"></i> Edit
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger" 
                                onclick="confirmDelete('<%= product.id %>', '<%= product.name %>')">
                          <i class="fas fa-trash-alt"></i> Delete
                        </button>
                      </td>
                    </tr>
                  <% }) %>
                <% } else { %>
                  <tr>
                    <td colspan="6" class="text-center py-4">
                      <div class="empty-state">
                        <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                        <p>No products available yet</p>
                        <button type="button" class="btn btn-brown" data-bs-toggle="modal" data-bs-target="#addProductModal">
                          Add your first product
                        </button>
                      </div>
                    </td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header bg-gradient-brown text-white">
        <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form action="/admin/products/add" method="POST" enctype="multipart/form-data" id="addProductForm">
        <div class="modal-body">
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="productName" class="form-label">Product Name</label>
              <input type="text" class="form-control" id="productName" name="name" required>
            </div>
            <div class="col-md-6">
              <label for="productCategory" class="form-label">Category</label>
              <select class="form-select" id="productCategory" name="category" required>
                <option value="" disabled selected>Select category</option>
                <option value="Electronics">Electronics</option>
                <option value="Clothing">Clothing</option>
                <option value="Home">Home</option>
                <option value="Beauty">Beauty</option>
                <option value="Sports">Sports</option>
              </select>
            </div>
          </div>
          
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="productPrice" class="form-label">Price ($)</label>
              <input type="number" step="0.01" min="0" class="form-control" id="productPrice" name="price" required>
            </div>
            <div class="col-md-6">
              <label for="productStock" class="form-label">Stock Quantity</label>
              <input type="number" min="0" class="form-control" id="productStock" name="stock" required>
            </div>
          </div>
          
          <div class="mb-3">
            <label for="productDescription" class="form-label">Description</label>
            <textarea class="form-control" id="productDescription" name="description" rows="3" required></textarea>
          </div>
          
          <div class="mb-3">
            <label class="form-label">Product Images (Minimum 3 images required)</label>
            <div class="image-upload-container">
              <div class="image-preview-area d-flex flex-wrap mb-3" id="imagePreviewArea">
                <div class="image-preview-placeholder d-flex align-items-center justify-content-center bg-light-brown me-2 mb-2">
                  <i class="fas fa-plus text-brown"></i>
                </div>
              </div>
              <div class="input-group">
                <input type="file" class="form-control" id="productImages" name="images" accept="image/*" multiple required>
                <label class="input-group-text bg-brown text-white" for="productImages">Upload</label>
              </div>
              <small class="text-muted">Upload at least 3 images. Images will be cropped and resized automatically.</small>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-brown">Save Product</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Edit Product Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header bg-gradient-brown text-white">
        <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form action="/admin/products/edit" method="POST" enctype="multipart/form-data" id="editProductForm">
        <input type="hidden" id="editProductId" name="id">
        <div class="modal-body">
          <!-- Same fields as Add Product form -->
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="editProductName" class="form-label">Product Name</label>
              <input type="text" class="form-control" id="editProductName" name="name" required>
            </div>
            <div class="col-md-6">
              <label for="editProductCategory" class="form-label">Category</label>
              <select class="form-select" id="editProductCategory" name="category" required>
                <option value="" disabled>Select category</option>
                <option value="Electronics">Electronics</option>
                <option value="Clothing">Clothing</option>
                <option value="Home">Home</option>
                <option value="Beauty">Beauty</option>
                <option value="Sports">Sports</option>
              </select>
            </div>
          </div>
          
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="editProductPrice" class="form-label">Price ($)</label>
              <input type="number" step="0.01" min="0" class="form-control" id="editProductPrice" name="price" required>
            </div>
            <div class="col-md-6">
              <label for="editProductStock" class="form-label">Stock Quantity</label>
              <input type="number" min="0" class="form-control" id="editProductStock" name="stock" required>
            </div>
          </div>
          
          <div class="mb-3">
            <label for="editProductDescription" class="form-label">Description</label>
            <textarea class="form-control" id="editProductDescription" name="description" rows="3" required></textarea>
          </div>
          
          <div class="mb-3">
            <label class="form-label">Current Images</label>
            <div class="current-images-container d-flex flex-wrap mb-3" id="currentImagesContainer">
              <!-- Current images will be displayed here dynamically -->
            </div>
          </div>
          
          <div class="mb-3">
            <label class="form-label">Upload New Images</label>
            <div class="input-group">
              <input type="file" class="form-control" id="editProductImages" name="images" accept="image/*" multiple>
              <label class="input-group-text bg-brown text-white" for="editProductImages">Upload</label>
            </div>
            <small class="text-muted">Leave empty to keep current images. Product must have minimum 3 images.</small>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-brown">Update Product</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteProductModal" tabindex="-1" aria-labelledby="deleteProductModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="deleteProductModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete <strong id="deleteProductName"></strong>?</p>
        <p class="text-muted small">This product will be marked as deleted but can be restored by an administrator.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <form action="/admin/products/delete" method="POST" id="deleteProductForm">
          <input type="hidden" id="deleteProductId" name="id">
          <button type="submit" class="btn btn-danger">Delete Product</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Custom CSS for light brown theme -->
<style>
  :root {
    --brown-100: #f5f0e8;
    --brown-200: #e6d7c3;
    --brown-300: #d4bea2;
    --brown-400: #c1a68c;
    --brown-500: #b08d6c;
    --brown-600: #9a7b5f;
    --brown-700: #846a51;
    --brown-800: #6b5440;
    --brown-900: #524030;
  }
  
  .bg-brown {
    background-color: var(--brown-600) !important;
  }
  
  .bg-light-brown {
    background-color: var(--brown-100) !important;
  }
  
  .bg-gradient-brown {
    background: linear-gradient(to right, var(--brown-700), var(--brown-500)) !important;
  }
  
  .text-brown {
    color: var(--brown-700) !important;
  }
  
  .btn-brown {
    background-color: var(--brown-600);
    color: white;
  }
  
  .btn-brown:hover {
    background-color: var(--brown-700);
    color: white;
  }
  
  .btn-outline-brown {
    border-color: var(--brown-600);
    color: var(--brown-600);
  }
  
  .btn-outline-brown:hover {
    background-color: var(--brown-600);
    color: white;
  }
  
  .card {
    margin-top: 70px;
    border-radius: 10px;
    overflow: hidden;
  }
  
  .card-header {
    padding: 1rem 1.5rem;
  }
  
  .image-preview-placeholder {
    width: 80px;
    height: 80px;
    border-radius: 5px;
    cursor: pointer;
  }
  
  .image-preview-item {
    width: 80px;
    height: 80px;
    border-radius: 5px;
    object-fit: cover;
    margin-right: 10px;
    margin-bottom: 10px;
    position: relative;
  }
  
  .image-preview-remove {
    position: absolute;
    top: -5px;
    right: -5px;
    background: var(--brown-600);
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
  }
  
  .empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
  }
  
  .product-images-preview {
    display: flex;
    align-items: center;
    gap: 5px;
  }
  
  .product-images-preview .badge {
    font-size: 0.7rem;
  }
</style>

<!-- JavaScript for handling image upload preview and product management -->
<script>
  // Image preview functionality for add product form
  document.getElementById('productImages').addEventListener('change', function(event) {
    const previewArea = document.getElementById('imagePreviewArea');
    previewArea.innerHTML = ''; // Clear existing previews
    
    if (this.files.length < 3) {
      alert('Please select at least 3 images');
      this.value = '';
      return;
    }
    
    Array.from(this.files).forEach((file, index) => {
      if (!file.type.match('image.*')) {
        return;
      }
      
      const reader = new FileReader();
      
      reader.onload = function(e) {
        const previewItem = document.createElement('div');
        previewItem.className = 'position-relative me-2 mb-2';
        previewItem.innerHTML = `
          <img src="${e.target.result}" class="image-preview-item" data-index="${index}">
          <div class="image-preview-remove" onclick="removePreview(this, ${index})">
            <i class="fas fa-times fa-xs"></i>
          </div>
        `;
        previewArea.appendChild(previewItem);
      }
      
      reader.readAsDataURL(file);
    });
  });
  
  // Function to remove preview (only visual, not removing from FileList)
  function removePreview(element, index) {
    element.parentElement.remove();
  }
  
  // Function to open edit product modal and populate with data
  function editProduct(productId) {
    // This would typically be an AJAX call to get product data
    fetch(`/admin/products/${productId}`)
      .then(response => response.json())
      .then(product => {
        document.getElementById('editProductId').value = product.id;
        document.getElementById('editProductName').value = product.name;
        document.getElementById('editProductCategory').value = product.category;
        document.getElementById('editProductPrice').value = product.price;
        document.getElementById('editProductStock').value = product.stock;
        document.getElementById('editProductDescription').value = product.description;
        
        // Display current images
        const currentImagesContainer = document.getElementById('currentImagesContainer');
        currentImagesContainer.innerHTML = '';
        
        if (product.images && product.images.length > 0) {
          product.images.forEach((image, index) => {
            const imageDiv = document.createElement('div');
            imageDiv.className = 'position-relative me-2 mb-2';
            imageDiv.innerHTML = `
              <img src="${image}" class="image-preview-item" alt="Product image ${index+1}">
              <div class="image-preview-remove" onclick="markImageForDeletion(${product.id}, ${index}, this)">
                <i class="fas fa-times fa-xs"></i>
              </div>
              <input type="hidden" name="existingImages[]" value="${index}">
            `;
            currentImagesContainer.appendChild(imageDiv);
          });
        }
        
        $('#editProductModal').modal('show');
      })
      .catch(error => {
        console.error('Error fetching product data:', error);
        alert('Could not load product data. Please try again.');
      });
  }
  
  // Function to mark image for deletion
  function markImageForDeletion(productId, imageIndex, element) {
    const container = element.closest('.position-relative');
    container.style.opacity = '0.5';
    const input = container.querySelector('input[type="hidden"]');
    input.name = 'imagesToDelete[]';
  }
  
  // Function to confirm product deletion
  function confirmDelete(productId, productName) {
    document.getElementById('deleteProductId').value = productId;
    document.getElementById('deleteProductName').textContent = productName;
    $('#deleteProductModal').modal('show');
  }
  
  // Form validation
  document.getElementById('addProductForm').addEventListener('submit', function(e) {
    const imageInput = document.getElementById('productImages');
    if (imageInput.files.length < 3) {
      e.preventDefault();
      alert('Please upload at least 3 product images');
    }
  });
  
  document.getElementById('editProductForm').addEventListener('submit', function(e) {
    const imageInput = document.getElementById('editProductImages');
    const currentImagesCount = document.querySelectorAll('#currentImagesContainer input[name="existingImages[]"]').length;
    const imagesToDeleteCount = document.querySelectorAll('#currentImagesContainer input[name="imagesToDelete[]"]').length;
    
    const remainingImages = currentImagesCount - imagesToDeleteCount;
    const newImagesCount = imageInput.files.length;
    
    if (remainingImages + newImagesCount < 3) {
      e.preventDefault();
      alert('Product must have at least 3 images. Please upload more images or keep existing ones.');
    }
  });
</script>

<%- include('../Partials/admin/adminFooter') %>