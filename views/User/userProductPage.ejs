<%- include('../Partials/user/shopPage/header', { title: `ChapterOne | ${product.name}` }) %>
<link rel="stylesheet" href="/css/User/userHome.css">
<link rel="stylesheet" href="/css/User/productPage.css">

<style>
    /* Base styles */
body {
    padding-top: 80px;
}

:root {
    --primary-brown: #8B5A2B;
    --secondary-brown: #A67C52;
}

/* Product title and text */
.product-title {
    color: var(--primary-brown);
    font-size: 1.75rem;
    font-family: 'Playfair Display', serif;
}

.section-title {
    position: relative;
    padding-bottom: 10px;
    font-family: 'Playfair Display', serif;
}

.section-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 60px;
    height: 3px;
    background-color: var(--primary-brown);
}

.product-author {
    font-size: 1.1rem;
}

/* Price styling */
.current-price {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--primary-brown);
}

.original-price {
    font-size: 1.1rem;
}

.discount-badge {
    background-color: #e8f7e8; 
    color: #1bc71b;
    padding: 2px 8px;
    border-radius: 4px;
    font-size: 0.9rem;
}

/* Product highlights and specifications */
.highlights-list {
    list-style-type: none;
    padding-left: 0;
}

.highlights-list li {
    margin-bottom: 0.5rem;
}

/* Tab styling */
.nav-tabs .nav-link {
    color: var(--secondary-brown);
}

.nav-tabs .nav-link.active {
    color: var(--primary-brown);
    font-weight: 600;
}

/* Product image container */
.product-image-container {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    background-color: #f8f9fa;
    min-height: 400px;
}

#productImageWrapper {
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
}

#mainProductImage {
    transition: transform 0.3s ease;
    width: 100%;
    height: 400px;
    object-fit: contain;
    background-color: #f8f9fa;
}

/* Image zoom effect */
#imageZoomOverlay {
    cursor: zoom-in;
}

#imageZoomOverlay:hover + #mainProductImage,
#imageZoomOverlay:hover ~ #mainProductImage {
    transform: scale(1.1);
}

.zoom-instructions {
    font-size: 0.85rem;
    opacity: 0.8;
}

/* Thumbnails */
.product-thumbnails {
    display: flex;
    overflow-x: auto;
    gap: 10px;
    margin-top: 15px;
    padding-bottom: 10px;
}

.thumbnail {
    min-width: 70px;
    width: 70px;
    height: 70px;
    border-radius: 6px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: border-color 0.2s ease;
    flex-shrink: 0;
}

.thumbnail.active {
    border-color: var(--primary-brown);
}

.thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    background-color: #f8f9fa;
}

/* Quantity selector */
.quantity-selector .form-control {
    text-align: center;
    font-weight: bold;
}

.quantity-btn {
    background-color: #f8f9fa;
    border-color: #dee2e6;
}

.quantity-btn:hover {
    background-color: #e9ecef;
}

/* Product action buttons */
.product-actions .btn {
    transition: all 0.3s ease;
}

.product-actions .btn-primary {
    background-color: var(--primary-brown);
    border-color: var(--primary-brown);
}

.product-actions .btn-primary:hover {
    background-color: #816c5b;
    border-color: #816c5b;
}

.product-actions .btn-outline-primary {
    border-color: var(--primary-brown);
    color: var(--primary-brown);
}

.product-actions .btn-outline-primary:hover {
    background-color: var(--primary-brown);
    color: white;
}

.add-to-wishlist i {
    transition: all 0.3s ease;
}

.add-to-wishlist:hover i {
    color: #ff3366;
}

/* Action buttons */
.btn-action {
    width: 35px;
    height: 35px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa;
    color: var(--primary-brown);
    border: 1px solid #dee2e6;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.btn-action:hover {
    background-color: var(--primary-brown);
    color: white;
}

/* Rating styles */
.rating-value {
    font-weight: bold;
}

/* Review section */
.review-item {
    transition: background-color 0.2s ease;
    padding: 15px;
    border-radius: 8px;
}

.review-item:hover {
    background-color: #f8f9fa;
}

.review-title {
    font-weight: 600;
}

.review-actions .btn {
    font-size: 0.85rem;
}

.review-pagination .page-link {
    color: var(--primary-brown);
}

.review-pagination .page-item.active .page-link {
    background-color: var(--primary-brown);
    border-color: var(--primary-brown);
}

/* Related products styles */
.related-products .book-card {
    position: relative;
    background-color: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    height: 100%;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
}

.related-products .book-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12);
}

.related-products .book-image {
    height: 250px;
    width: 100%;
    object-fit: contain;
    padding: 15px;
    background-color: #f8f9fa;
    transition: transform 0.3s ease;
}

.related-products .book-card:hover .book-image {
    transform: scale(1.05);
}

.related-products .book-card-content {
    padding: 15px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

.related-products .book-title {
    font-size: 1.1rem;
    line-height: 1.4;
    margin-bottom: 8px;
    color: var(--primary-brown);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    font-family: 'Playfair Display', serif;
    height: 3rem;
}

.related-products .book-author {
    font-size: 0.9rem;
    color: #6c757d;
    margin-bottom: 8px;
}

.related-products .book-price {
    color: var(--primary-brown);
    font-weight: bold;
    margin-top: auto;
}

.related-products .book-actions {
    padding: 0 15px 15px 15px;
    display: flex;
    gap: 10px;
}

/* Offer banner styling */
.offer-banner {
    background: linear-gradient(135deg, #f8f9fa, #e9ecef);
    border: 1px solid #dee2e6;
    border-left: 4px solid #17a2b8;
    border-radius: 6px;
    padding: 12px 15px;
    position: relative;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    margin-bottom: 20px;
    overflow: hidden;
}

.offer-banner:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.offer-content {
    display: flex;
    flex-direction: column;
    position: relative;
    z-index: 2;
}

.offer-badge {
    font-weight: 600;
    color: #17a2b8;
    font-size: 1.05rem;
    margin-bottom: 4px;
    display: flex;
    align-items: center;
}

.offer-badge i {
    margin-right: 6px;
}

.offer-description {
    color: #495057;
    margin-bottom: 4px;
    line-height: 1.4;
}

.offer-expires {
    color: #6c757d;
    font-size: 0.85rem;
}

/* Animation for new offers */
@keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2); }
    70% { box-shadow: 0 0 0 10px rgba(0, 0, 0, 0); }
    100% { box-shadow: 0 0 0 0 rgba(0, 0, 0, 0); }
}

.offer-banner.new-offer {
    animation: pulse 2s infinite;
}

/* Responsive adjustments */
@media (max-width: 767px) {
    .product-title {
        font-size: 1.5rem;
    }
    
    .product-actions {
        flex-direction: column;
    }
    
    .product-actions .btn {
        width: 100%;
    }
    
    .review-summary .col-md-4 {
        margin-bottom: 20px;
    }
    
    .offer-banner {
        padding: 10px 12px;
    }
    
    .offer-badge {
        font-size: 1rem;
    }
}
</style>

<body>   
<!-- Product Details Page -->
<div class="container mt-5 pt-4">
    <!-- Breadcrumbs -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/" style="color: var(--primary-brown);">Home</a></li>
            <li class="breadcrumb-item"><a href="/shop" style="color: var(--primary-brown);">Shop</a></li>
            <!-- <li class="breadcrumb-item"><a href="/shop?category=<%= product.category %>" style="color: var(--primary-brown);"><%= product.category %></a></li> -->
            <li class="breadcrumb-item active" aria-current="page"><%= product.name %></li>
        </ol>
    </nav>

    <!-- Alert for out of stock or unavailable -->
    <% if (product.status === 'unavailable' || product.status === 'true' || product.isBlocked === true) { %>
        <div class="alert alert-warning mb-4" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            This product is currently unavailable. You will be redirected to the shop page in <span id="countdown">5</span> seconds.
        </div>
        <script>
            let seconds = 5;
            const countdownElement = document.getElementById('countdown');
            
            const countdown = setInterval(() => {
                seconds--;
                countdownElement.textContent = seconds;
                if (seconds <= 0) {
                    clearInterval(countdown);
                    window.location.href = '/shop';
                }
            }, 1000);
        </script>
    <% } else if (product.stock <= 0) { %>
        <div class="alert alert-danger mb-4" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            This product is currently out of stock. You can add it to your wishlist to be notified when it becomes available.
        </div>
    <% } %>

    <div class="row">
        <!-- Left Column - Product Images -->
                
<div class="col-md-5 mb-4">
    <div class="product-image-container">
        <div id="productImageWrapper" class="position-relative overflow-hidden">
            <!-- Main product image - Properly handle both string and array formats -->
            <img id="mainProductImage" src="<%= Array.isArray(product.productImages) ? product.productImages[0] : product.productImages %>" alt="<%= product.name %>" class="img-fluid w-100 rounded">
            
            <!-- Zoom overlay -->
            <div id="imageZoomOverlay" class="position-absolute top-0 start-0 w-100 h-100">
                <div class="zoom-instructions position-absolute bottom-0 start-0 m-3 text-white bg-dark bg-opacity-50 rounded px-2 py-1">
                    <small><i class="fas fa-search-plus me-1"></i> Hover to zoom</small>
                </div>
            </div>
            
            <!-- Badges -->
            <% if (product.isNewArrival) { %>
                <div class="badge bg-success position-absolute top-0 end-0 m-3">New Arrival</div>
            <% } %>
            <% if (product.discount > 0) { %>
                <div class="badge bg-success position-absolute top-0 start-0 m-3">
                    <%= product.discount %>% OFF
                </div>
            <% } %>
            <% if (product.availableQuantity <= 5 && product.availableQuantity > 0) { %>
                <div class="badge bg-warning text-dark position-absolute bottom-0 end-0 m-3">
                    Only <%= product.availableQuantity %> left!
                </div>
            <% } else if (product.availableQuantity <= 0) { %>
                <div class="badge bg-danger position-absolute bottom-0 end-0 m-3">
                    Sold Out
                </div>
            <% } %>
        </div>
        
       <!-- Thumbnail Images - Fixed logic for handling arrays -->
<div class="product-thumbnails d-flex mt-3">
    <% if (Array.isArray(product.productImages) && product.productImages.length > 0) { %>
        <% product.productImages.forEach(function(img, index) { %>
            <div class="thumbnail <%= index === 0 ? 'active' : '' %> me-2" data-img="<%= img %>">
                <img src="<%= img %>" alt="<%= product.name %> - Image <%= index + 1 %>" class="img-fluid rounded">
            </div>
        <% }); %>
    <% } else if (product.productImages) { %>
        <!-- Single image case - still show as thumbnail -->
        <div class="thumbnail active me-2" data-img="<%= product.productImages %>">
            <img src="<%= product.productImages %>" alt="<%= product.name %>" class="img-fluid rounded">
        </div>
    <% } %>
</div>
    </div>
</div>
        
        <!-- Right Column - Product Details -->
        <div class="col-md-7">
            <div class="product-details">
                <h1 class="product-title" style="font-family: 'Playfair Display', serif;"><%= product.name %></h1>
                <p class="product-author mb-2">by <span class="text-primary"><%= product.writer %></span></p>
                
                <!-- Ratings -->
                <!-- <div class="product-ratings mb-3 d-flex align-items-center">
                    <div class="stars me-2">
                        <% for(let i = 1; i <= 5; i++) { %>
                            <% if (i <= Math.floor(product.rating)) { %>
                                <i class="fas fa-star text-warning"></i>
                            <% } else if (i - 0.5 <= product.rating) { %>
                                <i class="fas fa-star-half-alt text-warning"></i>
                            <% } else { %>
                                <i class="far fa-star text-warning"></i>
                            <% } %>
                        <% } %>
                    </div>
                    <span class="rating-value">
    <%= (product.rating !== undefined && product.rating !== null) ? product.rating.toFixed(1) : 'N/A' %>
</span>

                    <span class="ms-2 text-muted">(<%= product.reviewCount %> reviews)</span>
                </div> -->
                

                

<!-- Offer Display Template -->
<% if (product.discount > 0 && product.offer) { %>
    <div class="offer-banner mb-3" 
         data-offer-type="<%= product.offer.offerType %>"
         data-discount="<%= product.offer.discountPercentage %>"
         data-expiry="<%= product.offer.endDate %>"
         data-is-new="<%= (new Date() - new Date(product.offer.createdAt)) / (1000*60*60*24) < 2 %>">
        <div class="offer-content">
            <div class="offer-badge">
                <i class="fas fa-tag"></i>
                <%= product.offer.name %>
            </div>
            <div class="offer-description">
                <%= product.offer.description %>
            </div>
            <% if (product.offer.endDate) { %>
                <div class="offer-expires">
                    <small>Offer ends: <%= new Date(product.offer.endDate).toLocaleDateString() %></small>
                </div>
            <% } %>
        </div>
    </div>
<% } %>


                <!-- Price -->
                <div class="product-price mb-3">
                    <% if (product.discount > 0) { %>
                        <span class="current-price">₹<%= product.salePrice.toFixed(2) %></span>
                        <span class="original-price text-muted text-decoration-line-through me-2">₹<%= product.regularPrice.toFixed(2) %></span>
                        <span class="discount-badge ms-2"><%= product.discount %>% OFF</span>
                    <% } else { %>
                        <span class="current-price">₹<%= product.salePrice.toFixed(2) %></span>
                    <% } %>
                </div>
                <!-- Stock status -->
                <div class="stock-status mb-3">
                    <% if (product.availableQuantity > 0) { %>
                        <span class="text-success"><i class="fas fa-check-circle me-1"></i> In Stock</span>
                        <span class="text-muted ms-2">(<%= product.availableQuantity %> available)</span>
                    <% } else { %>
                        <span class="text-danger"><i class="fas fa-times-circle me-1"></i> Out of Stock</span>
                    <% } %>
                </div>
                

                

                <!-- Quantity selector -->
                <div class="quantity-selector mb-4">
                    <label for="quantity" class="form-label mb-2">Quantity:</label>
                    <div class="input-group" style="width: 150px;">
                        <button class="btn btn-outline-secondary quantity-btn" type="button" id="decreaseQuantity" <%= product.availableQuantity <= 0 ? 'disabled' : '' %>><i class="fas fa-minus"></i></button>
                        <input type="number" class="form-control text-center" id="quantity" value="1" min="1" max="<%= product.availableQuantity %>" <%= product.availableQuantity <= 0 ? 'disabled' : '' %>>
                        <button class="btn btn-outline-secondary quantity-btn" type="button" id="increaseQuantity" <%= product.availableQuantity <= 0 ? 'disabled' : '' %>><i class="fas fa-plus"></i></button>
                    </div>
                </div>
                
                <!-- Action buttons -->
                <div class="product-actions d-flex flex-wrap gap-2 mb-4">
                    <button class="btn btn-primary btn-lg add-to-cart" <%= product.stock <= 0 ? 'disabled' : '' %>>
                        <i class="fas fa-shopping-cart me-2"></i> Add to Cart
                    </button>
                    <button class="btn btn-outline-secondary btn-lg add-to-wishlist">
                        <i class="far fa-heart"></i>
                    </button>
                </div>
                
                <!-- Product highlights -->
                <div class="product-highlights mb-4">
                    <h4 class="mb-3" style="font-family: 'Playfair Display', serif;">Highlights</h4>
                    <div class="row">
                        <div class="col-md-6">
                            <ul class="highlights-list">
                                <!-- <li><strong>Publisher:</strong> <%= product.publisher %></li> -->
                                <li><strong>Language:</strong> <%= product.language %></li>
                                <!-- <li><strong>Paperback:</strong> <%= product.pageCount %> pages</li>
                                <li><strong>ISBN:</strong> <%= product.isbn %></li> -->
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <ul class="highlights-list">
                                <li><strong>Publication Date:</strong> <%= product.publishedDate.toISOString().split('T')[0] %></li>
                                <!-- <li><strong>Dimensions:</strong> <%= product.dimensions %></li>
                                <li><strong>Weight:</strong> <%= product.weight %></li>
                                <li><strong>Edition:</strong> <%= product.edition %></li> -->
                            </ul>
                        </div>
                    </div>
                </div>
                
                <!-- Delivery information -->
                <div class="delivery-info mb-4">
                    <h4 class="mb-3" style="font-family: 'Playfair Display', serif;">Delivery Information</h4>
                    <div class="d-flex align-items-center mb-2">
                        <i class="fas fa-truck text-muted me-3 fa-lg"></i>
                        <div>
                            <p class="mb-0">Usually ships within 2-3 business days</p>
                            <p class="mb-0 text-muted">Free delivery on orders over ₹500</p>
                        </div>
                    </div>
                    <div class="d-flex align-items-center mb-2">
                        <i class="fas fa-exchange-alt text-muted me-3 fa-lg"></i>
                        <div>
                            <p class="mb-0">Easy 7-day returns</p>
                            <p class="mb-0 text-muted">See return policy for details</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Product Description and Reviews Tabs -->
    <div class="product-tabs mt-5">
        <ul class="nav nav-tabs" id="productTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab">Description</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="specs-tab" data-bs-toggle="tab" data-bs-target="#specs" type="button" role="tab">Specifications</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab">Reviews (<%= product.reviewCount %>)</button>
            </li>
        </ul>
        <div class="tab-content p-4 border border-top-0 rounded-bottom" id="productTabsContent">
            <!-- Description Tab -->
            <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
                <div class="description-content">
                    <h4 class="mb-3">About the Book</h4>
                    <p><%= product.description %></p>
                    
                    <!-- <% if (product.longDescription) { %>
                        <div class="mt-4">
                            <%- product.longDescription %>
                        </div>
                    <% } %> -->
                </div>
            </div>
            
            <!-- Specifications Tab -->
            <div class="tab-pane fade" id="specs" role="tabpanel" aria-labelledby="specs-tab">
                <div class="specs-content">
                    <h4 class="mb-3">Book Details</h4>
                    <table class="table table-striped">
                        <tbody>
                            <tr>
                                <th scope="row" style="width: 200px;">Title</th>
                                <td><%= product.name %></td>
                            </tr>
                            <tr>
                                <th scope="row">Author</th>
                                <td><%= product.writer %></td>
                            </tr>
                            <!-- <tr>
                                <th scope="row">Publisher</th>
                                <td><%= product.publisher %></td>
                            </tr>
                            <tr>
                                <th scope="row">ISBN-13</th>
                                <td><%= product.isbn %></td>
                            </tr> -->
                            <tr>
                                <th scope="row">Publication Date</th>
                                <td><%= product.publishedDate.toISOString().split('T')[0] %></td>
                            </tr>
                            <tr>
                                <th scope="row">Language</th>
                                <td><%= product.language %></td>
                            </tr>
                            <!-- <tr>
                                <th scope="row">Page Count</th>
                                <td><%= product.pageCount %> pages</td>
                            </tr> -->
                            <!-- <tr>
                                <th scope="row">Dimensions</th>
                                <td><%= product.dimensions %></td>
                            </tr>
                            <tr>
                                <th scope="row">Weight</th>
                                <td><%= product.weight %></td>
                            </tr>
                            <tr>
                                <th scope="row">Edition</th>
                                <td><%= product.edition %></td>
                            </tr> -->
                            <tr>
                                <th scope="row">Category</th>
                                <td><%= product.category_id.name %></td>
                            </tr>
                            <!-- <% if (product.subCategory) { %>
                                <tr>
                                    <th scope="row">Sub-Category</th>
                                    <td><%= product.subCategory %></td>
                                </tr>
                            <% } %> -->
                        </tbody>
                    </table>
                </div>
            </div>
            
            <!-- Reviews Tab -->
            <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
                <div class="reviews-content">
                    <!-- Review summary -->
                    <div class="review-summary mb-4">
                        <div class="row">
                            <div class="col-md-4 d-flex flex-column align-items-center justify-content-center">
                                <!-- <div class="overall-rating mb-2">
                                    <span class="display-4">
                                        <%= (typeof product.rating === 'number' && !isNaN(product.rating)) ? product.rating.toFixed(1) : 'N/A' %>
                                    </span>
                                    <span class="text-muted">/ 5</span>
                                </div> -->
                                
                                <!-- <div class="stars mb-2">
                                    <% for(let i = 1; i <= 5; i++) { %>
                                        <% if (i <= Math.floor(product.rating)) { %>
                                            <i class="fas fa-star text-warning"></i>
                                        <% } else if (i - 0.5 <= product.rating) { %>
                                            <i class="fas fa-star-half-alt text-warning"></i>
                                        <% } else { %>
                                            <i class="far fa-star text-warning"></i>
                                        <% } %>
                                    <% } %>
                                </div> -->
                                <div class="text-center">
                                    <small class="text-muted">Based on <%= product.reviewCount %> reviews</small>
                                </div>
                            </div>
                     
                        </div>
                    </div>
                    
                    <!-- Review filter -->
                    <div class="review-filter mb-4">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Customer Reviews</h5>
                            <div class="filter-options">
                                <select class="form-select form-select-sm">
                                    <option value="newest">Newest First</option>
                                    <option value="highest">Highest Rating</option>
                                    <option value="lowest">Lowest Rating</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Review list -->
                    <div class="review-list">
                        <% if (product.reviews && product.reviews.length > 0) { %>
                            <% product.reviews.forEach(function(review) { %>
                                <div class="review-item mb-4 pb-4 border-bottom">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <div class="reviewer-info">
                                            <h6 class="mb-0"><%= review.userName %></h6>
                                            <small class="text-muted">Verified Purchase</small>
                                        </div>
                                        <div class="review-date">
                                            <small class="text-muted"><%= review.date %></small>
                                        </div>
                                    </div>
                                    <div class="review-rating mb-2">
                                        <% for(let i = 1; i <= 5; i++) { %>
                                            <i class="fas fa-star <%= i <= review.rating ? 'text-warning' : 'text-muted' %>"></i>
                                        <% } %>
                                    </div>
                                    <% if (review.title) { %>
                                        <h6 class="review-title mb-2"><%= review.title %></h6>
                                    <% } %>
                                    <p class="review-text mb-2"><%= review.content %></p>
                                    <div class="review-actions">
                                        <button class="btn btn-sm btn-outline-secondary me-2">
                                            <i class="far fa-thumbs-up me-1"></i> Helpful (<%= review.helpfulCount || 0 %>)
                                        </button>
                                        <button class="btn btn-sm btn-outline-secondary">
                                            <i class="far fa-comment me-1"></i> Reply
                                        </button>
                                    </div>
                                </div>
                            <% }); %>
                            
                            <!-- Pagination for reviews -->
                            <% if (product.reviewCount > 5) { %>
                                <div class="review-pagination mt-4">
                                    <nav>
                                        <ul class="pagination justify-content-center">
                                            <li class="page-item disabled">
                                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                                            </li>
                                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                                            <li class="page-item">
                                                <a class="page-link" href="#">Next</a>
                                            </li>
                                        </ul>
                                    </nav>
                                </div>
                            <% } %>
                        <% } else { %>
                            <div class="text-center py-5">
                                <i class="far fa-comment-alt fa-3x text-muted mb-3"></i>
                                <h5>No reviews yet</h5>
                                <p class="text-muted">Be the first to review this book!</p>
                                <button class="btn btn-primary mt-2">Write a Review</button>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
 <!-- Related Products -->
<div class="related-products mt-5">
    <h3 class="section-title mb-4" style="font-family: 'Playfair Display', serif;">You May Also Like</h3>
    <div class="row">
        <% if (relatedProducts && relatedProducts.length > 0) { %>
            <% relatedProducts.forEach(function(relatedProduct) { %>
                <div class="col-md-3 mb-4">
                    <div class="book-card">
                        <a href="/bookPage/<%= relatedProduct._id %>" class="d-block">
                            <img src="<%= Array.isArray(relatedProduct.productImages) ? relatedProduct.productImages[0] : relatedProduct.productImages %>" alt="<%= relatedProduct.name %>" class="img-fluid book-image">
                        </a>
                        <div class="book-card-content">
                            <a href="/bookPage/<%= relatedProduct._id %>" style="color: inherit; text-decoration: none;">
                                <h5 class="book-title"><%= relatedProduct.name %></h5>
                                <p class="book-author"><%= relatedProduct.writer %></p>
                                <% if (relatedProduct.discount > 0) { %>
                                    <p class="book-price">
                                        <span class="text-muted text-decoration-line-through">₹<%= relatedProduct.regularPrice.toFixed(2) %></span>
                                        ₹<%= relatedProduct.salePrice.toFixed(2) %>
                                        <span class="ms-1 small text-danger"><%= relatedProduct.discount %>% off</span>
                                    </p>
                                <% } else { %>
                                    <p class="book-price">₹<%= relatedProduct.salePrice.toFixed(2) %></p>
                                <% } %>
                            </a>
                        </div>
                        <div class="book-actions">
                            <button class="btn btn-sm btn-action add-to-cart-related" data-product-id="<%= relatedProduct._id %>" title="Add to cart">
                                <i class="fas fa-shopping-cart"></i>
                            </button>
                            <button class="btn btn-sm btn-action add-to-wishlist-related" data-product-id="<%= relatedProduct._id %>" title="Add to wishlist">
                                <i class="fas fa-heart"></i>
                            </button>
                            <button class="btn btn-sm btn-action quick-view-related" data-product-id="<%= relatedProduct._id %>" title="Quick view">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <div class="col-12">
                <p class="text-center text-muted">No related products found.</p>
            </div>
        <% } %>
    </div>
</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Element selectors
    const quantityInput = document.getElementById('quantity');
    const decreaseBtn = document.getElementById('decreaseQuantity');
    const increaseBtn = document.getElementById('increaseQuantity');
    const addToCartBtn = document.querySelector('.add-to-cart');
    const buyNowBtn = document.querySelector('.buy-now');
    const wishlistBtn = document.querySelector('.add-to-wishlist');
    const productId = window.location.pathname.split('/').pop();
    
    // Image zoom functionality
    setupImageZoom();
    
    // Thumbnail gallery functionality
    setupThumbnailGallery();
    
    // Quantity selector functionality
    if (decreaseBtn && increaseBtn && quantityInput) {
        setupQuantitySelector();
    }
    
    // Add to cart button functionality
    if (addToCartBtn) {
        addToCartBtn.addEventListener('click', function() {
            const quantity = parseInt(quantityInput.value);
            addToCart(productId, quantity);
        });
    }
    
    // Buy now button functionality
    if (buyNowBtn) {
        buyNowBtn.addEventListener('click', function() {
            const quantity = parseInt(quantityInput.value);
            buyNow(productId, quantity);
        });
    }
    
    // Wishlist button functionality
    if (wishlistBtn) {
        wishlistBtn.addEventListener('click', function() {
            addToWishlist(productId);
        });
    }
    
    // Related products buttons
    setupRelatedProductButtons();
});

function setupImageZoom() {
    const imageWrapper = document.getElementById('productImageWrapper');
    const zoomOverlay = document.getElementById('imageZoomOverlay');
    const mainImage = document.getElementById('mainProductImage');
    
    if (imageWrapper && zoomOverlay && mainImage) {
        zoomOverlay.addEventListener('mousemove', function(e) {
            // Get position of mouse relative to image
            const { left, top, width, height } = imageWrapper.getBoundingClientRect();
            const x = (e.clientX - left) / width;
            const y = (e.clientY - top) / height;
            
            // Move background image
            mainImage.style.transformOrigin = `${x * 100}% ${y * 100}%`;
            mainImage.style.transform = 'scale(1.8)'; // Increased zoom level
        });
        
        zoomOverlay.addEventListener('mouseleave', function() {
            mainImage.style.transform = 'scale(1)';
            mainImage.style.transition = 'transform 0.3s ease';
        });
    }
}

function setupThumbnailGallery() {
    const thumbnails = document.querySelectorAll('.thumbnail');
    const mainImage = document.getElementById('mainProductImage');
    
    thumbnails.forEach(thumbnail => {
        thumbnail.addEventListener('click', function() {
            // Remove active class from all thumbnails
            thumbnails.forEach(thumb => thumb.classList.remove('active'));
            
            // Add active class to clicked thumbnail
            this.classList.add('active');
            
            // Update main image source with fade effect
            const newImageSrc = this.getAttribute('data-img');
            mainImage.style.opacity = '0';
            
            setTimeout(() => {
                mainImage.src = newImageSrc;
                mainImage.style.opacity = '1';
            }, 200);
        });
    });
}

function setupQuantitySelector() {
    const quantityInput = document.getElementById('quantity');
    const decreaseBtn = document.getElementById('decreaseQuantity');
    const increaseBtn = document.getElementById('increaseQuantity');
    
    const maxQuantity = parseInt(quantityInput.getAttribute('max')) || 10;
    
    decreaseBtn.addEventListener('click', function() {
        let currentValue = parseInt(quantityInput.value);
        if (currentValue > 1) {
            quantityInput.value = currentValue - 1;
        }
    });
    
    increaseBtn.addEventListener('click', function() {
        let currentValue = parseInt(quantityInput.value);
        if (currentValue < maxQuantity) {
            quantityInput.value = currentValue + 1;
        } else {
            showSweetAlert('warning', 'Maximum available quantity reached!');
        }
    });
    
    quantityInput.addEventListener('change', function() {
        let currentValue = parseInt(this.value);
        
        // Handle invalid inputs
        if (isNaN(currentValue) || currentValue < 1) {
            this.value = 1;
        } else if (currentValue > maxQuantity) {
            this.value = maxQuantity;
            showSweetAlert('warning', 'Maximum available quantity reached!');
        }
    });
}

function setupRelatedProductButtons() {
    // Related products add to cart buttons
    const relatedCartBtns = document.querySelectorAll('.add-to-cart-related');
    relatedCartBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            addToCart(productId, 1);
        });
    });
    
    // Related products wishlist buttons
    const relatedWishlistBtns = document.querySelectorAll('.add-to-wishlist-related');
    relatedWishlistBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            addToWishlist(productId);
        });
    });
    
    // Quick view functionality for related products
    const quickViewBtns = document.querySelectorAll('.quick-view-related');
    quickViewBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            window.location.href = `/bookPage/${productId}`;
        });
    });
}

function addToCart(productId, quantity) {
    if (quantity > 10) {
        showSweetAlert1('error', 'Maximum quantity limit is 10');
        return; // Stop execution if quantity exceeds limit
    }
    // Show loading spinner on button
    const addToCartBtn = document.querySelector('.add-to-cart');
    const originalBtnHtml = addToCartBtn.innerHTML;
    addToCartBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
    addToCartBtn.disabled = true;
    
    fetch('/cart/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ bookId:productId, quantity }),
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(errorData => {
                throw new Error(errorData.message || 'Network response was not ok');
            });
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            showSweetAlert('success', 'Product added to cart successfully!');
            
            // Update cart count if it exists in the header
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement) {
                cartCountElement.textContent = data.cartCount || parseInt(cartCountElement.textContent) + 1;
            }
        } else {
            showSweetAlert('error', data.message || 'Failed to add product to cart');
        }
    })
    .catch(error => {
        console.error('Error adding to cart:', error);
        showSweetAlert('error', error.message || 'Something went wrong. Please try again.');
    })
    .finally(() => {
        // Restore button state
        addToCartBtn.innerHTML = originalBtnHtml;
        addToCartBtn.disabled = false;
    });
}

// Assumed SweetAlert function (if you don't have one)
function showSweetAlert1(type, message) {
    // Make sure SweetAlert2 is loaded
    if (typeof Swal !== 'undefined') {
        Swal.fire({
            icon: type,
            title: type === 'success' ? 'Success!' : 'Oops...',
            text: message,
            confirmButtonColor: '#3085d6'
        });
    } else { 
        // Fallback to alert if SweetAlert is not available
        alert(message);
    }
}

function buyNow(productId, quantity) {
    // Show loading spinner on button
    const buyNowBtn = document.querySelector('.buy-now');
    const originalBtnHtml = buyNowBtn.innerHTML;
    buyNowBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
    buyNowBtn.disabled = true;
    
    fetch('/cart/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ bookId:productId, quantity }),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            // Redirect to checkout page
            window.location.href = '/checkout';
        } else {
            showSweetAlert('error', data.message || 'Failed to process your order');
        }
    })
    .catch(error => {
        console.error('Error with buy now:', error);
        showSweetAlert('error', 'Something went wrong. Please try again.');
    })
    .finally(() => {
        // Restore button state
        buyNowBtn.innerHTML = originalBtnHtml;
        buyNowBtn.disabled = false;
    });
}

function addToWishlist(productId) {
    // Toggle heart icon
    const wishlistBtn = document.querySelector('.add-to-wishlist');
    const icon = wishlistBtn.querySelector('i');
    
    // Change icon to filled heart temporarily
    if (icon.classList.contains('far')) {
        icon.classList.replace('far', 'fas');
        icon.classList.add('text-danger');
    }
    
    fetch('/wishlist/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({bookId: productId }),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            showSweetAlert('success', 'Product added to wishlist!');
            
            // Keep the filled heart icon
            if (icon && icon.classList.contains('far')) {
                icon.classList.replace('far', 'fas');
                icon.classList.add('text-danger');
            }
            
            // Update wishlist count if it exists in the header
            const wishlistCountElement = document.querySelector('.wishlist-count');
            if (wishlistCountElement) {
                wishlistCountElement.textContent = data.wishlistCount || parseInt(wishlistCountElement.textContent) + 1;
            }
        } else {
            // Revert icon change if failed
            if (icon && icon.classList.contains('fas')) {
                icon.classList.replace('fas', 'far');
                icon.classList.remove('text-danger');
            }
            
            if (data.message === 'Product already in wishlist') {
                showSweetAlert('info', 'This product is already in your wishlist');
            } else if (data.message === 'Please login to add to wishlist') {
                showSweetAlert('warning', 'Please login to add items to your wishlist', function() {
                    window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);
                });
            } else {
                showSweetAlert('error', data.message || 'Failed to add to wishlist');
            }
        }
    })
    .catch(error => {
        console.error('Error adding to wishlist:', error);
        showSweetAlert('error', 'Something went wrong. Please try again.');
        
        // Revert icon change if error
        if (icon && icon.classList.contains('fas')) {
            icon.classList.replace('fas', 'far');
            icon.classList.remove('text-danger');
        }
    });
}

function showSweetAlert(type, message, callback) {
    if (typeof Swal !== 'undefined') {
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        });
        
        Toast.fire({
            icon: type,
            title: message
        }).then(() => {
            if (callback && typeof callback === 'function') {
                callback();
            }
        });
    } else {
        // Only as fallback if SweetAlert is not loaded
        console.warn('SweetAlert is not available. Using default alert instead.');
        alert(message);
        if (callback && typeof callback === 'function') {
            callback();
        }
    }
}

// Function to set up themed offer banners
function setupOfferBanners() {
    // Get all offer banners
    const offerBanners = document.querySelectorAll('.offer-banner');
    
    offerBanners.forEach(banner => {
        // Get offer data from data attributes
        const offerType = banner.getAttribute('data-offer-type') || 'product';
        const discountPercentage = parseInt(banner.getAttribute('data-discount') || '0');
        const expiryDate = new Date(banner.getAttribute('data-expiry') || '');
        const isNew = banner.getAttribute('data-is-new') === 'true';
        
        // Apply appropriate theme class
        if (offerType === 'category') {
            banner.classList.add('category-offer');
        } else {
            banner.classList.add('product-offer');
        }
        
        // Add high discount class if applicable
        if (discountPercentage >= 30) {
            banner.classList.add('high-discount');
        }
        
        // Check if offer is expiring soon (within 3 days)
        const currentDate = new Date();
        const daysUntilExpiry = Math.ceil((expiryDate - currentDate) / (1000 * 60 * 60 * 24));
        
        if (daysUntilExpiry <= 3 && daysUntilExpiry >= 0) {
            banner.classList.add('expires-soon');
            
            // Add countdown timer for soon-to-expire offers
            const expiresEl = banner.querySelector('.offer-expires');
            if (expiresEl) {
                const smallEl = expiresEl.querySelector('small');
                if (smallEl) {
                    // Format the date
                    const formattedDate = expiryDate.toLocaleDateString();
                    
                    // Add countdown text
                    smallEl.innerHTML = `Offer ends: ${formattedDate} <span class="countdown-timer">(${daysUntilExpiry} day${daysUntilExpiry !== 1 ? 's' : ''} left)</span>`;
                }
            }
        }
        
        // Add animation for new offers
        if (isNew) {
            banner.classList.add('new-offer');
        }
    });
}

// Update offer banner icons based on offer type
function updateOfferIcons() {
    const productOffers = document.querySelectorAll('.offer-banner.product-offer');
    const categoryOffers = document.querySelectorAll('.offer-banner.category-offer');
    const expiringSoonOffers = document.querySelectorAll('.offer-banner.expires-soon');
    
    // Update icons based on offer type
    productOffers.forEach(offer => {
        const iconEl = offer.querySelector('.offer-badge i');
        if (iconEl) {
            iconEl.className = 'fas fa-tag';
        }
    });
    
    categoryOffers.forEach(offer => {
        const iconEl = offer.querySelector('.offer-badge i');
        if (iconEl) {
            iconEl.className = 'fas fa-percentage';
        }
    });
    
    expiringSoonOffers.forEach(offer => {
        const iconEl = offer.querySelector('.offer-badge i');
        if (iconEl) {
            // Only change the icon if it's an expiring offer
            if (!offer.classList.contains('product-offer') && !offer.classList.contains('category-offer')) {
                iconEl.className = 'fas fa-clock';
            }
        }
        
        // Add clock icon to expires text
        const expiresEl = offer.querySelector('.offer-expires');
        if (expiresEl && !expiresEl.querySelector('i')) {
            const small = expiresEl.querySelector('small');
            if (small) {
                const clockIcon = document.createElement('i');
                clockIcon.className = 'fas fa-clock me-1';
                expiresEl.insertBefore(clockIcon, small);
            }
        }
    });
}

// Initialize offer banners when the DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    setupOfferBanners();
    updateOfferIcons();
});
</script>
</body>
<%- include('../Partials/user/shopPage/footer') %>