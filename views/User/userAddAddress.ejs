<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ChapterOne | Add New Address</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&family=Playfair+Display:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.all.min.js"></script>
    <style>
        :root {
            --primary-brown: #8B5A2B;
            --secondary-brown: #A67C52;
            --light-brown: #D2B48C;
            --dark-brown: #654321;
            --accent-gold: #D4AF37;
            --soft-shadow: rgba(0, 0, 0, 0.05);
            --card-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            --sidebar-width: 260px;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .dashboard-sidebar {
            width: var(--sidebar-width);
            background-color: white;
            position: fixed;
            height: 100vh;
            box-shadow: var(--card-shadow);
            padding: 25px 0;
            overflow-y: auto;
            z-index: 10;
        }

        .logo-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
            margin-bottom: 25px;
        }

        .logo-text {
            font-family: 'Playfair Display', serif;
            color: var(--primary-brown);
            margin: 0;
        }

        .back-home-btn {
            color: var(--primary-brown);
            text-decoration: none;
            display: flex;
            align-items: center;
            font-size: 14px;
            padding: 6px 12px;
            border: 1px solid var(--primary-brown);
            border-radius: 4px;
            transition: all 0.3s ease;
        }

        .back-home-btn:hover {
            background-color: var(--primary-brown);
            color: white;
        }

        .user-profile .profile-image img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border: 3px solid var(--light-brown);
            border-radius: 50%;
        }

        .sidebar-nav ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .sidebar-nav li {
            margin-bottom: 5px;
        }

        .nav-link1 {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: #555;
            text-decoration: none;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }

        .nav-link1.active {
            background-color: rgba(139, 90, 43, 0.1);
            color: var(--primary-brown);
            border-left-color: var(--primary-brown);
        }

        .nav-link1:hover {
            background-color: rgba(139, 90, 43, 0.1);
            color: var(--primary-brown);
            border-left-color: var(--primary-brown);
        }

        .nav-link1 i {
            margin-right: 12px;
            width: 20px;
            text-align: center;
        }

        /* Main Content Styles */
        .dashboard-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 30px;
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .dashboard-header h2 {
            font-family: 'Playfair Display', serif;
            color: var(--primary-brown);
            margin: 0;
        }

        /* Content Cards */
        .content-card {
            background-color: white;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            margin-bottom: 25px;
            overflow: hidden;
        }

        .card-header {
            padding: 15px 20px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .card-header h5 {
            margin: 0;
            color: var(--secondary-brown);
            font-family: 'Playfair Display', serif;
        }

        .card-body {
            padding: 20px;
        }

        .primary-btn {
            background-color: var(--primary-brown);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .primary-btn:hover {
            background-color: var(--dark-brown);
            color: white;
        }

        .secondary-btn {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .secondary-btn:hover {
            background-color: #5a6268;
            color: white;
        }

        /* Form Styles */
        .form-label {
            font-weight: 500;
            color: var(--dark-brown);
            margin-bottom: 8px;
        }

        .form-control:focus {
            border-color: var(--light-brown);
            box-shadow: 0 0 0 0.25rem rgba(139, 90, 43, 0.25);
        }

        .required-field::after {
            content: "*";
            color: #dc3545;
            margin-left: 4px;
        }

        .btn-group-action {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }

        /* Responsive */
        @media (max-width: 992px) {
            .dashboard-sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }
            
            .dashboard-sidebar.active {
                transform: translateX(0);
            }
            
            .dashboard-content {
                margin-left: 0;
            }
            
            .toggle-sidebar {
                display: block;
                position: fixed;
                top: 15px;
                left: 15px;
                z-index: 100;
                background-color: var(--primary-brown);
                color: white;
                border: none;
                width: 40px;
                height: 40px;
                border-radius: 5px;
                display: flex;
                align-items: center;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Mobile Toggle Button (visible on small screens) -->
        <button class="toggle-sidebar d-lg-none">
            <i class="fas fa-bars"></i>
        </button>
        
        <!-- Sidebar -->
        <div class="dashboard-sidebar">
           
            <div class="logo-container">
                <a href="/" class="back-home-btn">
                    <i class="fas fa-home me-1"></i> Back To Home
                </a>
            </div>
            <div class="logo-container">
                <h3 class="logo-text">ChapterOne</h3>
            </div>
            
           
            
            <div class="user-profile text-center mb-4">
                <div class="profile-image">
                    <img src="<%= user.profileImage %>" alt="Profile Picture">
                </div>
                <h5 class="mt-3"><%= user.name %></h5>
                <p class="text-muted small"><%= user.email %></p>
            </div>
            
            <nav class="sidebar-nav">
                <ul>
                    <li>
                        <a href="/account" class="nav-link1">
                            <i class="fas fa-th-large"></i>
                            <span>Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/account/profile" class="nav-link1 active">
                            <i class="fas fa-user"></i>
                            <span>Profile</span>
                        </a>
                    </li>
                    <li>
                        <a href="/account/edit-profile" class="nav-link1">
                            <i class="fas fa-user-edit"></i>
                            <span>Edit Profile</span>
                        </a>
                    </li>
                    <li>
                        <% if (!user.googleId) { %>
                            <a href="/account/change-password" class="nav-link1">
                                <i class="fas fa-lock"></i>
                                <span>Change Password</span>
                            </a>
                        <% } %>
                    </li>
                    <li>
                        <a href="/account/change-email" class="nav-link1">
                            <i class="fas fa-envelope"></i>
                            <span>Change Email</span>
                        </a>
                    </li>
                    <li>
                        <a href="/account/orders" class="nav-link1">
                            <i class="fas fa-shopping-bag"></i>
                            <span>Orders</span>
                        </a>
                    </li>
                    <li>
                        <a href="/account/wallet" class="nav-link1">
                            <i class="fas fa-wallet"></i>
                            <span>Wallet</span>
                        </a>
                    </li>
                    <li class="mt-4">
                        <a href="/logout" class="nav-link1 text-danger">
                            <i class="fas fa-sign-out-alt"></i>
                            <span>Logout</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
        
        <!-- Main Content -->
        <div class="dashboard-content">
            <div class="dashboard-header">
                <h2>Add New Address</h2>
            </div>
            
            <!-- Add Address Form -->
            <div class="content-card">
                <div class="card-header">
                    <h5>Address Details</h5>
                </div>
                <div class="card-body">
                    <form action="/account/addresses/add" method="POST">
                        <input type="hidden" name="returnUrl" value="<%= returnUrl %>">
                        
                        <!-- Full Name -->
                        <div class="mb-3">
                            <label for="fullName" class="form-label required-field">Full Name</label>
                            <input type="text" class="form-control" id="fullName" name="fullName" required>
                        </div>
                        
                        <!-- Alternative Phone Number -->
                        <div class="mb-3">
                            <label for="alternative_no" class="form-label required-field">Phone Number</label>
                            <input type="tel" class="form-control" id="alternative_no" name="alternative_no" required>
                            <div class="form-text text-muted">10-digit mobile number starting with 6, 7, 8, or 9</div>
                        </div>
                        
                        <!-- House Number -->
                        <div class="mb-3">
                            <label for="houseNumber" class="form-label required-field">House/Flat Number</label>
                            <input type="text" class="form-control" id="houseNumber" name="houseNumber" required>
                        </div>
                        
                        <!-- Street -->
                        <div class="mb-3">
                            <label for="street" class="form-label required-field">Street/Area</label>
                            <input type="text" class="form-control" id="street" name="street" required>
                        </div>
                        
                        <!-- Landmark -->
                        <div class="mb-3">
                            <label for="landmark" class="form-label required-field">Landmark</label>
                            <input type="text" class="form-control" id="landmark" name="landmark" required>
                        </div>
                        
                        <div class="row"> 
                            <!-- City -->
                            <div class="col-md-6 mb-3">
                                <label for="city" class="form-label required-field">City</label>
                                <input type="text" class="form-control" id="city" name="city" required>
                            </div>
                            
                            <!-- State -->
                            <div class="col-md-6 mb-3">
                                <label for="state" class="form-label required-field">State</label>
                                <input type="text" class="form-control" id="state" name="state" required>
                            </div>
                        </div>
                        
                        <!-- Pincode -->
                        <div class="mb-3">
                            <label for="pincode" class="form-label required-field">PIN Code</label>
                            <input type="text" class="form-control" id="pincode" name="pincode" required>
                        </div>
                        
                        <!-- Address Type -->
                        <div class="mb-4">
                            <label class="form-label required-field">Address Type</label>
                            <div class="d-flex gap-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="addressType" id="addressType1" value="Home" checked>
                                    <label class="form-check-label" for="addressType1">
                                        Home
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="addressType" id="addressType2" value="Work">
                                    <label class="form-check-label" for="addressType2">
                                        Work
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="addressType" id="addressType3" value="Other">
                                    <label class="form-check-label" for="addressType3">
                                        Other
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Set as Default -->
                        <div class="mb-4">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="isDefault" name="isDefault">
                                <label class="form-check-label" for="isDefault">
                                    Set as default address
                                </label>
                            </div>
                        </div>
                        
                        <div class="btn-group-action">
                            <a href="/account/profile" class="secondary-btn">Cancel</a>
                            <button type="submit" class="primary-btn">Save Address</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and Popper.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        // Toggle sidebar on mobile
        document.querySelector('.toggle-sidebar')?.addEventListener('click', function() {
            document.querySelector('.dashboard-sidebar').classList.toggle('active');
        });
        
        // Get form element
        const addressForm = document.querySelector('form[action="/account/addresses/add"]');

        // Add event listener for form submission
        addressForm.addEventListener('submit', function(event) {
            // Prevent form from submitting normally
            event.preventDefault();
            
            // Get form fields
            const fullName = document.getElementById('fullName').value.trim();
            const alternativePhone = document.getElementById('alternative_no').value.trim();
            const houseNumber = document.getElementById('houseNumber').value.trim();
            const street = document.getElementById('street').value.trim();
            const landmark = document.getElementById('landmark').value.trim();
            const city = document.getElementById('city').value.trim();
            const state = document.getElementById('state').value.trim();
            const pincode = document.getElementById('pincode').value.trim();
            const addressType = document.querySelector('input[name="addressType"]:checked').value;
            const isDefault = document.getElementById('isDefault').checked;
            const returnUrl = document.querySelector('input[name="returnUrl"]').value;
            
            // Initialize validation status
            let isValid = true;
            
            // Clear previous error messages
            clearErrorMessages();
            
            // Validate Full Name
            if (!fullName) {
                displayError('fullName', 'Full Name is required');
                isValid = false;
            }
            
            // Validate Phone Number
            if (!alternativePhone) {
                displayError('alternative_no', 'Phone Number is required');
                isValid = false;
            } else if (!/^[6-9][0-9]{9}$/.test(alternativePhone)) {
                displayError('alternative_no', 'Enter a valid 10-digit phone number starting with 6, 7, 8, or 9');
                isValid = false;
            }
            
            // Validate House Number
            if (!houseNumber) {
                displayError('houseNumber', 'House/Flat Number is required');
                isValid = false;
            }
            
            // Validate Street
            if (!street) {
                displayError('street', 'Street/Area is required');
                isValid = false;
            }
            
            // Validate Landmark
            if (!landmark) {
                displayError('landmark', 'Landmark is required');
                isValid = false;
            }
            
            // Validate City - only alphabets and spaces
            if (!city) {
                displayError('city', 'City is required');
                isValid = false;
            } else if (!/^[A-Za-z\s]+$/.test(city)) {
                displayError('city', 'City should contain only alphabets and spaces');
                isValid = false;
            }
            
            // Validate State - only alphabets and spaces
            if (!state) {
                displayError('state', 'State is required');
                isValid = false;
            } else if (!/^[A-Za-z\s]+$/.test(state)) {
                displayError('state', 'State should contain only alphabets and spaces');
                isValid = false;
            }
            
            // Validate PIN Code - 6 digits
            if (!pincode) {
                displayError('pincode', 'PIN Code is required');
                isValid = false;
            } else if (!/^\d{6}$/.test(pincode)) {
                displayError('pincode', 'Enter a valid 6-digit PIN Code');
                isValid = false;
            }
            
            // If all validations pass, submit the form using fetch
            if (isValid) {
                // Create form data object
                const formData = {
                    fullName: fullName,
                    alternative_no: alternativePhone,
                    houseNumber: houseNumber,
                    street: street,
                    landmark: landmark,
                    city: city,
                    state: state,
                    pincode: pincode,
                    addressType: addressType,
                    isDefault: isDefault,
                    returnUrl: returnUrl
                };
                
                // Send data using fetch
                fetch('/account/addresses/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => {
                    // First get the JSON from the response
                    return response.json().then(data => {
                        // Return both the response object and the data
                        return {
                            ok: response.ok,
                            status: response.status,
                            data: data
                        };
                    });
                })
                .then(result => {
                    // Now we have both the response status and the data
                    if (result.ok) {
                        // Success message
                        Swal.fire({
                            title: 'Success!',
                            text: result.data.message || 'Address added successfully!',
                            icon: 'success',
                            confirmButtonColor: '#8B5A2B',
                            confirmButtonText: 'OK'
                        }).then((sweet) => {
                            if (sweet.isConfirmed) {
                                // Redirect to profile page or returnUrl
                                window.location.href = result.data.returnUrl || '/account/profile';
                            }
                        });
                    } else {
                        // Error message from server
                        Swal.fire({
                            title: 'Error!',
                            text: result.data.message || 'Something went wrong. Please try again.',
                            icon: 'error',
                            confirmButtonColor: '#8B5A2B',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Something went wrong. Please try again later.',
                        icon: 'error',
                        confirmButtonColor: '#8B5A2B',
                        confirmButtonText: 'OK'
                    });
                });
            }
        });

        // Function to display error message
        function displayError(fieldId, message) {
            const field = document.getElementById(fieldId);
            const errorElement = document.createElement('div');
            errorElement.className = 'invalid-feedback';
            errorElement.style.display = 'block'; // Make error visible
            errorElement.textContent = message;
            
            field.classList.add('is-invalid');
            field.parentNode.appendChild(errorElement);
        }

        // Function to clear all error messages
        function clearErrorMessages() {
            // Remove all error messages
            document.querySelectorAll('.invalid-feedback').forEach(el => el.remove());
            
            // Remove invalid class from all fields
            document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
        }

        // Real-time validation for Full Name (input event)
        document.getElementById('fullName').addEventListener('input', function() {
            // Allow letters, spaces and basic punctuation
            // No specific validation needed here as it can contain various characters
        });

        // Real-time validation for PIN Code (input event)
        document.getElementById('pincode').addEventListener('input', function() {
            this.value = this.value.replace(/[^0-9]/g, '').substring(0, 6);
        });

        // Real-time validation for City and State (input event)
        document.getElementById('city').addEventListener('input', function() {
            this.value = this.value.replace(/[^A-Za-z\s]/g, '');
        });

        document.getElementById('state').addEventListener('input', function() {
            this.value = this.value.replace(/[^A-Za-z\s]/g, '');
        });

        // Real-time validation for Phone Number (input event)
        document.getElementById('alternative_no').addEventListener('input', function() {
            this.value = this.value.replace(/[^0-9]/g, '').substring(0, 10);
        });
    </script>
</body>
</html>